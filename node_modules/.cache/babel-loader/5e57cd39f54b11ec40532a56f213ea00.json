{"ast":null,"code":"module.exports = extend;\n/*\r\n  var obj = {a: 3, b: 5};\r\n  extend(obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\r\n  obj; // {a: 4, b: 5, c: 8}\r\n\r\n  var obj = {a: 3, b: 5};\r\n  extend({}, obj, {a: 4, c: 8}); // {a: 4, b: 5, c: 8}\r\n  obj; // {a: 3, b: 5}\r\n\r\n  var arr = [1, 2, 3];\r\n  var obj = {a: 3, b: 5};\r\n  extend(obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\r\n  arr.push(4);\r\n  obj; // {a: 3, b: 5, c: [1, 2, 3, 4]}\r\n\r\n  var arr = [1, 2, 3];\r\n  var obj = {a: 3, b: 5};\r\n  extend(true, obj, {c: arr}); // {a: 3, b: 5, c: [1, 2, 3]}\r\n  arr.push(4);\r\n  obj; // {a: 3, b: 5, c: [1, 2, 3]}\r\n\r\n  extend({a: 4, b: 5}); // {a: 4, b: 5}\r\n  extend({a: 4, b: 5}, 3); {a: 4, b: 5}\r\n  extend({a: 4, b: 5}, true); {a: 4, b: 5}\r\n  extend('hello', {a: 4, b: 5}); // throws\r\n  extend(3, {a: 4, b: 5}); // throws\r\n*/\n\nfunction extend()\n/* [deep], obj1, obj2, [objn] */\n{\n  var args = [].slice.call(arguments);\n  var deep = false;\n\n  if (typeof args[0] == 'boolean') {\n    deep = args.shift();\n  }\n\n  var result = args[0];\n\n  if (isUnextendable(result)) {\n    throw new Error('extendee must be an object');\n  }\n\n  var extenders = args.slice(1);\n  var len = extenders.length;\n\n  for (var i = 0; i < len; i++) {\n    var extender = extenders[i];\n\n    for (var key in extender) {\n      if (extender.hasOwnProperty(key)) {\n        var value = extender[key];\n\n        if (deep && isCloneable(value)) {\n          var base = Array.isArray(value) ? [] : {};\n          result[key] = extend(true, result.hasOwnProperty(key) && !isUnextendable(result[key]) ? result[key] : base, value);\n        } else {\n          result[key] = value;\n        }\n      }\n    }\n  }\n\n  return result;\n}\n\nfunction isCloneable(obj) {\n  return Array.isArray(obj) || {}.toString.call(obj) == '[object Object]';\n}\n\nfunction isUnextendable(val) {\n  return !val || typeof val != 'object' && typeof val != 'function';\n}","map":null,"metadata":{},"sourceType":"script"}